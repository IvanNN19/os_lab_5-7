###### Windows
# файлы кэша миниатюр Windows
Thumbs.db
Thumbs.db: шифруемый
ehthumbs.db
ehthumbs_vista.db

# Файл дампа
*.stackdump

# Файл конфигурации папки
[Dd]esktop.ini

# Корзина, используемая в общих файловых ресурсах
$RECYCLE.BIN/

# Установочные файлы Windows
*.cab
*.msi
*.msix
*.msm
*.msp

# ярлыки Windows
*.lnk

##### Linux
*~

# временные файлы, которые могут быть созданы, если у процесса все еще открыт дескриптор удаленного файла
.fuse_hidden*

# настройки каталога KDE
.каталог

# Папка корзины Linux, которая может появиться на любом разделе или диске
.Trash-*

# файлы .nfs создаются, когда открытый файл удален, но к нему все еще осуществляется доступ
.nfs*

###### macOS
# Общие сведения
.DS_Store
.AppleDouble
.LSOverride

# Эскизы
._*

# Файлы, которые могут отображаться в корневом каталоге тома
.DocumentRevisions-Версия 100
.fseventsd
.Spotlight-Версия 100
.Временные элементы
.Мусорные баки
.VolumeIcon.icns
.com.apple.timemachine.не представляйте

# Каталоги, потенциально созданные на удаленном общем ресурсе AFP
.AppleDB
.AppleDesktop
Сетевая  папка "Корзина"
Временные элементы
.apdisk

##### Android
# Встроенные файлы приложений
*.apk
*.ap_
*.aab

# Файлы для виртуальной машины ART / Dalvik
*.dex

# Файлы классов Java
*.class

# Сгенерированные файлы
bin/
gen/
выход/
# Раскомментируйте следующую строку на случай, если вам нужны файлы типа release build, но у вас нет файлов типа release build в вашем приложении
# релиз/

# Файлы Gradle
.gradle/
сборка/

# Локальный конфигурационный файл (путь к sdk и т.д.)
local.properties

# Proguard folder generated by Eclipse
proguard/

# Log Files
*.log

# Android Studio Navigation editor temp files
.navigation/

# Android Studio captures folder
captures/

# IntelliJ
*.iml
.idea/workspace.xml
.идея/tasks.xml
.идея/gradle.xml
.идея/assetWizardSettings.xml
.idea/словари
.idea/библиотеки
# Android Studio 3 в файле .gitignore.
.idea/кэши
.идея/modules.xml
# Прокомментируйте следующую строку, если для вас важно сохранить положение элементов в редакторе навигации
.идея/navEditor.xml

# Файлы хранилища ключей
# Раскомментируйте следующие строки, если вы не хотите возвращать файлы хранилища ключей в.
#*.jks
#*.хранилище ключей

# Внешняя встроенная папка сборки, созданная в Android Studio 2.2 и более поздних версиях
.externalNativeBuild

# Сервисы Google (например, API или Firebase)
# google-services.json

# Бесплатная линия
freeline.py
freeline/
freeline_project_description.json

# fastlane
fastlane/report.xml
fastlane/Preview.html
fastlane/скриншоты
fastlane/test_output
fastlane/readme.md

# Контроль версий
vcs.xml

# lint
lint/промежуточные компоненты/
lint/сгенерированный/
lint/outputs/
lint/tmp/
# lint/отчеты/

##### Резервное копирование
*.bak
*.gho
*.ori
*.origin
*.tmp

##### GPG
секретность.*

###### Dropbox
# Настройки и кэши Dropbox
.dropbox
.dropbox.attr
.dropbox.cache

##### Синопсисы
# Форматы сигналов
*.vcd
*.vpd
*.evcd
*.fsdb

# Имя исполняемого файла моделирования по умолчанию. Другое имя может быть
#, указанный с помощью этого параметра (соответствующее имя базы данных daidir равно
# также взято отсюда): -o <путь>/<имя файла>
simv

# Сгенерирован для лучших конфигураций Verilog и VHDL
символ.daidir/
simv.db.dir/

# Инфраструктура, необходимая для совместного моделирования SystemC-моделей с
# Модели Verilog / VHDL. Альтернативный каталог может быть указан следующим образом
# переключатель: -Mdir=<directory_path>
csrc/

# Файл журнала - следующий переключатель позволяет указать файл, который будет
# используется для записи всех сообщений из simulation: -l <имя файла>
*.log

Результаты покрытия# (генерируемые с помощью urg) и местоположение базы данных. The
также можно использовать# следующий переключатель: urg -dir <coverage_directory>.vdb
simv.vdb/
urgReport/

Файлы, связанные с # DVE и UCLI.
DVEfiles/
ucli.key

# При разработке дизайна для DirectC создается следующий файл
# с объявлениями функций на C / C ++.
vc_hdrs.h

##### SVN
.svn/

##### Mercurial
.hg/
.hgignore
.hgsigs
.hgsub
.hgsubstate
.hgtags

##### Bazaar
.bzr/
.bzrignore

##### CVS
/CVS/*
**/CVS/*
.cvsignore
*/.cvsignore

##### TortoiseGit
# Настройки на уровне проекта
/.tgitconfig

###### шпатлевка
# Закрытый ключ
*.ppk

##### Vim
# Поменять местами
[._]*.s[a-v][a-z]
!*.svg  # закомментируйте, если вам не нужны векторные файлы
[._]*.sw[a-p]
[._]s[a-rt-v][a-z]
[._]ss[a-gi-z]
[._]sw[a-p]

# сессия
Сессия.vim
Sessionx.vim

# Временный
.netrwhist
*~
# Автоматически генерируемые файлы тегов
Теги
# Постоянная отмена
[._]*.un~

##### Emacs
# -*- режим: gitignore; -*-
*~
\#*\#
/.emacs.desktop
/.emacs.desktop.lock
*.elc
auto-save-list
tramp
.\#*

# Org-mode
.org-id-locations
*_archive

# flymake-mode
*_flymake.*

# eshell files
/eshell/history
/eshell/lastdir

# elpa packages
/elpa/

# файлы reftex
*.rel

# Автоматическая папка AUCTeX
/auto/

# бочковые пакеты
.cask/
dist/

# Flycheck
flycheck_*.el

# каталог авторизации сервера
/сервер/

# файлы projectiles
.снаряд

# настройка каталога
.dir-locals.el

# сетевая безопасность
/сетевая безопасность.данные

##### SublimeText
# Файлы кэша для Sublime Text
*.tmlanguage.cache
*.tmPreferences.cache
*.stTheme.cache

# Файлы рабочей области зависят от пользователя
*.sublime-рабочее пространство

Файлы проекта# должны быть возвращены в репозиторий, если только не существует значительного
# доля участников, вероятно, не будет использовать Sublime Text
# *.sublime-проект

# SFTP configuration file
sftp-config.json
sftp-config-alt*.json

# Package control specific files
Package Control.last-run
Package Control.ca-list
Package Control.ca-bundle
Package Control.system-ca-bundle
Package Control.cache/
Package Control.ca-certs/
Package Control.merged-ca-bundle
Package Control.user-ca-bundle
oscrypto-ca-bundle.crt
bh_unicode_properties.cache

# Sublime-github package stores a github token in this file
# https://packagecontrol.io/packages/sublime-github
GitHub.sublime-settings

##### Notepad++
# Notepad++ backups #
*.bak

##### TextMate
*.tmproj
*.tmproject
tmtags

##### VisualStudioCode
.vscode/*
!.vscode/settings.json
!.vscode/tasks.json
!.vscode/launch.json
!.vscode/extensions.json
*.code-workspace

# Local History for Visual Studio Code
.history/

##### NetBeans
**/nbproject/private/
**/nbproject/Makefile-*.mk
**/nbproject/Package-*.bash
build/
nbbuild/
dist/
nbdist/
.nb-gradle/

##### JetBrains
# Covers JetBrains IDEs: IntelliJ, RubyMine, PhpStorm, AppCode, PyCharm, CLion, Android Studio, WebStorm and Rider
# Reference: https://intellij-support.jetbrains.com/hc/en-us/articles/206544839

# User-specific stuff
.idea/**/workspace.xml
.idea/**/tasks.xml
.idea/**/usage.statistics.xml
.idea/**/dictionaries
.idea/**/shelf

# Generated files
.idea/**/contentModel.xml

# Sensitive or high-churn files
.idea/**/dataSources/
.idea/**/dataSources.ids
.idea/**/dataSources.local.xml
.idea/**/sqlDataSources.xml
.idea/**/dynamic.xml
.idea/**/uiDesigner.xml
.idea/**/dbnavigator.xml

# Gradle
.idea/**/gradle.xml
.idea/**/libraries

# Gradle and Maven with auto-import
# When using Gradle or Maven with auto-import, you should exclude module files,
# since they will be recreated, and may cause churn.  Uncomment if using
# auto-import.
# .idea/artifacts
# .idea/compiler.xml
# .idea/jarRepositories.xml
# .idea/modules.xml
# .idea/*.iml
# .idea/modules
# *.iml
# *.ipr

# CMake
cmake-build-*/

# Mongo Explorer plugin
.idea/**/mongoSettings.xml

# File-based project format
*.iws

# IntelliJ
out/

# mpeltonen/sbt-idea plugin
.idea_modules/

# JIRA plugin
atlassian-ide-plugin.xml

# Cursive Clojure plugin
.idea/replstate.xml

# Crashlytics plugin (for Android Studio and IntelliJ)
com_crashlytics_export_strings.xml
crashlytics.properties
crashlytics-build.properties
fabric.properties

# Editor-based Rest Client
.idea/httpRequests

# Android studio 3.1+ serialized cache file
.idea/caches/build_file_checksums.ser

##### Eclipse
.metadata
bin/
tmp/
*.tmp
*.bak
*.swp
*~.nib
local.properties
.settings/
.loadpath
.recommenders

# External tool builders
.externalToolBuilders/

# Locally stored "Eclipse launch configurations"
*.launch

# PyDev specific (Python IDE for Eclipse)
*.pydevproject

# CDT-specific (C/C++ Development Tooling)
.cproject

# CDT- autotools
.autotools

# Java annotation processor (APT)
.factorypath

# PDT-specific (PHP Development Tools)
.buildpath

# sbteclipse plugin
.target

# Tern plugin
.tern-project

# TeXlipse plugin
.texlipse

# STS (Spring Tool Suite)
.springBeans

# Code Recommenders
.recommenders/

# Annotation Processing
.apt_generated/
.apt_generated_test/

# Scala IDE specific (Scala & Java development for Eclipse)
.cache-main
.scala_dependencies
.worksheet

# Uncomment this line if you wish to ignore the project description file.
# Typically, this file would be tracked if it contains build/dependency configurations:
#.project

##### Qt
# C++ objects and libs
*.slo
*.lo
*.o
*.a
*.la
*.lai
*.so
*.so.*
*.dll
*.dylib

# Qt-es
object_script.*.Release
object_script.*.Debug
*_plugin_import.cpp
/.qmake.cache
/.qmake.stash
*.pro.user
*.pro.user.*
*.qbs.user
*.qbs.user.*
*.moc
moc_*.cpp
moc_*.h
qrc_*.cpp
ui_*.h
*.qmlc
*.jsc
Makefile*
*build-*
*.qm
*.prl

# Qt unit tests
target_wrapper.*

# QtCreator
*.autosave

# QtCreator Qml
*.qmlproject.user
*.qmlproject.user.*

# QtCreator CMake
CMakeLists.txt.user*

# QtCreator 4.8< compilation database 
compile_commands.json

# QtCreator local machine specific files for imported projects
*creator.user*

##### VisualStudio
##### VisualStudio
## Ignore Visual Studio temporary files, build results, and
## files generated by popular Visual Studio add-ons.
##
## Get latest from https://github.com/github/gitignore/blob/master/VisualStudio.gitignore

# User-specific files
*.rsuser
*.suo
*.user
*.userosscache
*.sln.docstates

# User-specific files (MonoDevelop/Xamarin Studio)
*.userprefs

# Mono auto generated files
mono_crash.*

# Build results
[Dd]ebug/
[Dd]ebugPublic/
[Rr]elease/
[Rr]eleases/
x64/
x86/
[Ww][Ii][Nn]32/
[Aa][Rr][Mm]/
[Aa][Rr][Mm]64/
bld/
[Bb]in/
[Oo]bj/
[Ll]og/
[Ll]ogs/

# Visual Studio 2015/2017 cache/options directory
.vs/
# Uncomment if you have tasks that create the project's static files in wwwroot
#wwwroot/

# Visual Studio 2017 auto generated files
Generated\ Files/

# MSTest test Results
[Tt]est[Rr]esult*/
[Bb]uild[Ll]og.*

# NUnit
*.VisualState.xml
TestResult.xml
nunit-*.xml

# Build Results of an ATL Project
[Dd]ebugPS/
[Rr]eleasePS/
dlldata.c

# Benchmark Results
BenchmarkDotNet.Artifacts/

# .NET Core
project.lock.json
project.fragment.lock.json
artifacts/

# ASP.NET Scaffolding
ScaffoldingReadMe.txt

# StyleCop
StyleCopReport.xml

# Files built by Visual Studio
*_i.c
*_p.c
*_h.h
*.ilk
*.meta
*.obj
*.iobj
*.pch
*.pdb
*.ipdb
*.pgc
*.pgd
*.rsp
*.sbr
*.tlb
*.tli
*.tlh
*.tmp
*.tmp_proj
*_wpftmp.csproj
*.log
*.vspscc
*.vssscc
.builds
*.pidb
*.svclog
*.scc

# Chutzpah Test files
_Chutzpah*

# Visual C++ cache files
ipch/
*.aps
*.ncb
*.opendb
*.opensdf
*.sdf
*.cachefile
*.VC.db
*.VC.VC.opendb

# Visual Studio profiler
*.psess
*.vsp
*.vspx
*.sap

# Visual Studio Trace Files
*.e2e

# TFS 2012 Local Workspace
$tf/

# Guidance Automation Toolkit
*.gpState

# ReSharper is a .NET coding add-in
_ReSharper*/
*.[Rr]e[Ss]harper
*.DotSettings.user

# TeamCity is a build add-in
_TeamCity*

# DotCover is a Code Coverage Tool
*.dotCover

# AxoCover is a Code Coverage Tool
.axoCover/*
!.axoCover/settings.json

# Coverlet is a free, cross platform Code Coverage Tool
coverage*[.json, .xml, .info]

# Visual Studio code coverage results
*.coverage
*.coveragexml

# NCrunch
_NCrunch_*
.*crunch*.local.xml
nCrunchTemp_*

# MightyMoose
*.mm.*
AutoTest.Net/

# Web workbench (sass)
.sass-cache/

# Installshield output folder
[Ee]xpress/

# DocProject is a documentation generator add-in
DocProject/buildhelp/
DocProject/Help/*.HxT
DocProject/Help/*.HxC
DocProject/Help/*.hhc
DocProject/Help/*.hhk
DocProject/Help/*.hhp
DocProject/Help/Html2
DocProject/Help/html

# Click-Once directory
publish/

# Publish Web Output
*.[Pp]ublish.xml
*.azurePubxml
# Note: Comment the next line if you want to checkin your web deploy settings,
# but database connection strings (with potential passwords) will be unencrypted
*.pubxml
*.publishproj

# Microsoft Azure Web App publish settings. Comment the next line if you want to
# checkin your Azure Web App publish settings, but sensitive information contained
# in these scripts will be unencrypted
PublishScripts/

# NuGet Packages
*.nupkg
# NuGet Symbol Packages
*.snupkg
# The packages folder can be ignored because of Package Restore
**/[Pp]ackages/*
# except build/, which is used as an MSBuild target.
!**/[Pp]ackages/build/
# Uncomment if necessary however generally it will be regenerated when needed
#!**/[Pp]ackages/repositories.config
# NuGet v3's project.json files produces more ignorable files
*.nuget.props
*.nuget.targets

# Microsoft Azure Build Output
csx/
*.build.csdef

# Microsoft Azure Emulator
ecf/
rcf/

# Windows Store app package directories and files
AppPackages/
BundleArtifacts/
Package.StoreAssociation.xml
_pkginfo.txt
*.appx
*.appxbundle
*.appxupload

# Visual Studio cache files
# files ending in .cache can be ignored
*.[Cc]ache
# but keep track of directories ending in .cache
!?*.[Cc]ache/

# Others
ClientBin/
~$*
*~
*.dbmdl
*.dbproj.schemaview
*.jfm
*.pfx
*.publishsettings
orleans.codegen.cs

# Including strong name files can present a security risk
# (https://github.com/github/gitignore/pull/2483#issue-259490424)
#*.snk

# Since there are multiple workflows, uncomment next line to ignore bower_components
# (https://github.com/github/gitignore/pull/1529#issuecomment-104372622)
#bower_components/

# RIA/Silverlight projects
Generated_Code/

# Backup & report files from converting an old project file
# to a newer Visual Studio version. Backup files are not needed,
# because we have git ;-)
_UpgradeReport_Files/
Backup*/
UpgradeLog*.XML
UpgradeLog*.htm
ServiceFabricBackup/
*.rptproj.bak

# SQL Server files
*.mdf
*.ldf
*.ndf

# Business Intelligence projects
*.rdl.data
*.bim.layout
*.bim_*.settings
*.rptproj.rsuser
*- [Bb]ackup.rdl
*- [Bb]ackup ([0-9]).rdl
*- [Bb]ackup ([0-9][0-9]).rdl

# Microsoft Fakes
FakesAssemblies/

# GhostDoc plugin setting file
*.GhostDoc.xml

# Node.js Tools for Visual Studio
.ntvs_analysis.dat
node_modules/

# Visual Studio 6 build log
*.plg

# Visual Studio 6 workspace options file
*.opt

# Visual Studio 6 auto-generated workspace file (contains which files were open etc.)
*.vbw

# Visual Studio LightSwitch build output
**/*.HTMLClient/GeneratedArtifacts
**/*.DesktopClient/GeneratedArtifacts
**/*.DesktopClient/ModelManifest.xml
**/*.Server/GeneratedArtifacts
**/*.Server/ModelManifest.xml
_Pvt_Extensions

# Paket dependency manager
.paket/paket.exe
paket-files/

# FAKE - F# Make
.fake/

# CodeRush personal settings
.cr/personal

# Python Tools for Visual Studio (PTVS)
__pycache__/
*.pyc

# Cake - Uncomment if you are using it
# tools/**
# !tools/packages.config

# Tabs Studio
*.tss

# Telerik's JustMock configuration file
*.jmconfig

# BizTalk build output
*.btp.cs
*.btm.cs
*.odx.cs
*.xsd.cs

# OpenCover UI analysis results
OpenCover/

# Azure Stream Analytics local run output
ASALocalRun/

# MSBuild Binary and Structured Log
*.binlog

# NVidia Nsight GPU debugger configuration file
*.nvuser

# MFractors (Xamarin productivity tool) working folder
.mfractor/

# Local History for Visual Studio
.localhistory/

# BeatPulse healthcheck temp database
healthchecksdb

# Backup folder for Package Reference Convert tool in Visual Studio 2017
MigrationBackup/

# Ionide (cross platform F# VS Code tools) working folder
.ionide/

# Fody - auto-generated XML schema
FodyWeavers.xsd

##### Gradle
.gradle
**/build/
!src/**/build/

# Ignore Gradle GUI config
gradle-app.setting

# Avoid ignoring Gradle wrapper jar file (.jar files are usually ignored)
!gradle-wrapper.jar

# Cache of project
.gradletasknamecache

# # Work around https://youtrack.jetbrains.com/issue/IDEA-116898
# gradle/wrapper/gradle-wrapper.properties

##### CMake
CMakeLists.txt.user
CMakeCache.txt
CMakeFiles
CMakeScripts
Testing
Makefile
cmake_install.cmake
install_manifest.txt
compile_commands.json
CTestTestfile.cmake
_deps

##### C++
# Prerequisites
*.d

# Compiled Object files
*.slo
*.lo
*.o
*.obj

# Precompiled Headers
*.gch
*.pch

# Compiled Dynamic libraries
*.so
*.dylib
*.dll

# Fortran module files
*.mod
*.smod

# Compiled Static libraries
*.lai
*.la
*.a
*.lib

# Executables
*.exe
*.out
*.app

# C/C++ binary extension file
*.bin

##### C
# Prerequisites
*.d

# Object files
*.o
*.ko
*.obj
*.elf

# Linker output
*.ilk
*.map
*.exp

# Precompiled Headers
*.gch
*.pch

# Libraries
*.lib
*.a
*.la
*.lo

# Shared objects (inc. Windows DLLs)
*.dll
*.so
*.so.*
*.dylib

# Executables
*.exe
*.out
*.app
*.i*86
*.x86_64
*.hex

# Debug files
*.dSYM/
*.su
*.idb
*.pdb

# Kernel Module Compile Results
*.mod*
*.cmd
.tmp_versions/
modules.order
Module.symvers
Mkfile.old
dkms.conf

# Raspberry Pi Pico Object file
*.uf2
# Raspberry Pi Pico disassembler file
*.dis
@locnnil
locnnil commented 14 февраля 2022 • 
Really thanks! This gist helps a lot!
I have some suggestions to make this even better!

# Raspberry Pi Pico Object file
*.uf2
# Raspberry Pi Pico disassembler file
*.dis
# C/C++ binary extension file
*.bin
@Yousha
Author
Yousha commented 14 февраля 2022
@locnnil Thanks, added.

@lnikon
lnikon commented 20 августа 2022
Wow, this is really great list, thank you so much!

@SharifAkram
SharifAkram commented 30 июля
Thank you!!

@lihaohong6
lihaohong6 commented в прошлом месяце
Perhaps Bazel's build files can also be added just like cmake-build-*/?

bazel-*/
@IvanNN19
Comment
 
Leave a comment
 
Footer
© 2023 GitHub, Inc.
Footer navigation
Terms
Privacy
Security
Status
Docs
Contact GitHub
Pricing
API
Training
Blog
About